diff --git a/qtbase/mkspecs/macx-clang/qmake.conf b/qtbase/mkspecs/macx-clang/qmake.conf
index 14c885fd78..bc27985f03 100644
--- a/qtbase/mkspecs/macx-clang/qmake.conf
+++ b/qtbase/mkspecs/macx-clang/qmake.conf
@@ -2,7 +2,7 @@
 # qmake configuration for Clang on OS X
 #
 
-QMAKE_MACOSX_DEPLOYMENT_TARGET = 10.11
+QMAKE_MACOSX_DEPLOYMENT_TARGET = 10.13
 
 QMAKE_APPLE_DEVICE_ARCHS = x86_64
 
Submodule qtcanvas3d contains untracked content
Submodule qtcharts contains untracked content
Submodule qtconnectivity contains untracked content
Submodule qtconnectivity contains modified content
diff --git a/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm b/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm
index 2cece15b..f2c0f8ce 100644
--- a/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm
+++ b/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm
@@ -129,7 +129,7 @@ QT_USE_NAMESPACE
 
 - (void)dealloc
 {
-    if (manager) {
+    if (manager.data()) {
         [manager setDelegate:nil];
         if (internalState == InquiryActive)
             [manager stopScan];
diff --git a/qtconnectivity/src/bluetooth/osx/osxbtperipheralmanager.mm b/qtconnectivity/src/bluetooth/osx/osxbtperipheralmanager.mm
index d3d92f41..42c9a404 100644
--- a/qtconnectivity/src/bluetooth/osx/osxbtperipheralmanager.mm
+++ b/qtconnectivity/src/bluetooth/osx/osxbtperipheralmanager.mm
@@ -313,7 +313,7 @@ bool qt_validate_value_range(const QLowEnergyCharacteristicData &data)
 - (void)startAdvertising
 {
     state = PeripheralState::waitingForPowerOn;
-    if (manager)
+    if (manager.data())
         [manager setDelegate:nil];
     manager.reset([[CBPeripheralManager alloc] initWithDelegate:self
                    queue:OSXBluetooth::qt_LE_queue()]);
@@ -378,7 +378,7 @@ bool qt_validate_value_range(const QLowEnergyCharacteristicData &data)
 
 - (void) addServicesToPeripheral
 {
-    Q_ASSERT(manager);
+    Q_ASSERT(manager.data());
 
     if (nextServiceToAdd < services.size())
         [manager addService:services[nextServiceToAdd++]];
diff --git a/qtconnectivity/src/bluetooth/qbluetoothdevicediscoveryagent_osx.mm b/qtconnectivity/src/bluetooth/qbluetoothdevicediscoveryagent_osx.mm
index fed33bb2..fe3ffe24 100644
--- a/qtconnectivity/src/bluetooth/qbluetoothdevicediscoveryagent_osx.mm
+++ b/qtconnectivity/src/bluetooth/qbluetoothdevicediscoveryagent_osx.mm
@@ -181,7 +181,7 @@ QBluetoothDeviceDiscoveryAgentPrivate::QBluetoothDeviceDiscoveryAgentPrivate(con
 
 QBluetoothDeviceDiscoveryAgentPrivate::~QBluetoothDeviceDiscoveryAgentPrivate()
 {
-    if (inquiryLE && agentState != NonActive) {
+    if (inquiryLE.data() && agentState != NonActive) {
         // We want the LE scan to stop as soon as possible.
         if (dispatch_queue_t leQueue = OSXBluetooth::qt_LE_queue()) {
             // Local variable to be retained ...
@@ -195,7 +195,7 @@ QBluetoothDeviceDiscoveryAgentPrivate::~QBluetoothDeviceDiscoveryAgentPrivate()
 
 bool QBluetoothDeviceDiscoveryAgentPrivate::isValid() const
 {
-    return hostController && [hostController powerState] == kBluetoothHCIPowerStateON;
+    return hostController.data() && [hostController powerState] == kBluetoothHCIPowerStateON;
 }
 
 bool QBluetoothDeviceDiscoveryAgentPrivate::isActive() const
@@ -292,7 +292,7 @@ void QBluetoothDeviceDiscoveryAgentPrivate::startLE()
 
     // Check queue and create scanner:
     inquiryLE.reset([[LEDeviceInquiryObjC alloc] initWithNotifier:notifier.data()]);
-    if (inquiryLE)
+    if (inquiryLE.data())
         notifier.take(); // Whatever happens next, inquiryLE is already the owner ...
 
     dispatch_queue_t leQueue(qt_LE_queue());
diff --git a/qtconnectivity/src/bluetooth/qbluetoothlocaldevice_osx.mm b/qtconnectivity/src/bluetooth/qbluetoothlocaldevice_osx.mm
index 52b7bba8..e7dd9906 100644
--- a/qtconnectivity/src/bluetooth/qbluetoothlocaldevice_osx.mm
+++ b/qtconnectivity/src/bluetooth/qbluetoothlocaldevice_osx.mm
@@ -149,7 +149,7 @@ QBluetoothLocalDevicePrivate::QBluetoothLocalDevicePrivate(QBluetoothLocalDevice
 
 bool QBluetoothLocalDevicePrivate::isValid() const
 {
-    return hostController;
+    return hostController.data();
 }
 
 void QBluetoothLocalDevicePrivate::requestPairing(const QBluetoothAddress &address, Pairing pairing)
diff --git a/qtconnectivity/src/bluetooth/qbluetoothserver_osx.mm b/qtconnectivity/src/bluetooth/qbluetoothserver_osx.mm
index a1774d14..4c174661 100644
--- a/qtconnectivity/src/bluetooth/qbluetoothserver_osx.mm
+++ b/qtconnectivity/src/bluetooth/qbluetoothserver_osx.mm
@@ -142,7 +142,7 @@ void QBluetoothServerPrivate::stopListener()
 
 void QBluetoothServerPrivate::openNotify(IOBluetoothRFCOMMChannel *channel)
 {
-    Q_ASSERT_X(listener, Q_FUNC_INFO, "invalid listener (nil)");
+    Q_ASSERT_X(listener.data(), Q_FUNC_INFO, "invalid listener (nil)");
     Q_ASSERT_X(channel, Q_FUNC_INFO, "invalid channel (nil)");
     Q_ASSERT_X(q_ptr, Q_FUNC_INFO, "invalid q_ptr (null)");
 
@@ -154,7 +154,7 @@ void QBluetoothServerPrivate::openNotify(IOBluetoothRFCOMMChannel *channel)
 
 void QBluetoothServerPrivate::openNotify(IOBluetoothL2CAPChannel *channel)
 {
-    Q_ASSERT_X(listener, Q_FUNC_INFO, "invalid listener (nil)");
+    Q_ASSERT_X(listener.data(), Q_FUNC_INFO, "invalid listener (nil)");
     Q_ASSERT_X(channel, Q_FUNC_INFO, "invalid channel (nil)");
     Q_ASSERT_X(q_ptr, Q_FUNC_INFO, "invalid q_ptr (null)");
 
@@ -293,7 +293,7 @@ bool QBluetoothServer::listen(const QBluetoothAddress &address, quint16 port)
 
     OSXBluetooth::qt_test_iobluetooth_runloop();
 
-    if (d_ptr->listener) {
+    if (d_ptr->listener.data()) {
         qCWarning(QT_BT_OSX) << "already in listen mode, close server first";
         return false;
     }
diff --git a/qtconnectivity/src/bluetooth/qbluetoothserviceinfo_osx.mm b/qtconnectivity/src/bluetooth/qbluetoothserviceinfo_osx.mm
index 755e85c9..ff779f21 100644
--- a/qtconnectivity/src/bluetooth/qbluetoothserviceinfo_osx.mm
+++ b/qtconnectivity/src/bluetooth/qbluetoothserviceinfo_osx.mm
@@ -152,7 +152,7 @@ bool QBluetoothServiceInfoPrivate::unregisterService()
     if (!registered)
         return false;
 
-    Q_ASSERT_X(serviceRecord, Q_FUNC_INFO, "service registered, but serviceRecord is nil");
+    Q_ASSERT_X(serviceRecord.data(), Q_FUNC_INFO, "service registered, but serviceRecord is nil");
 
     [serviceRecord removeServiceRecord];
     serviceRecord.reset(nil);
diff --git a/qtconnectivity/src/bluetooth/qbluetoothsocket_osx.mm b/qtconnectivity/src/bluetooth/qbluetoothsocket_osx.mm
index 7ef6fd64..96f398df 100644
--- a/qtconnectivity/src/bluetooth/qbluetoothsocket_osx.mm
+++ b/qtconnectivity/src/bluetooth/qbluetoothsocket_osx.mm
@@ -103,13 +103,13 @@ void QBluetoothSocketPrivate::connectToService(const QBluetoothAddress &address,
 
     if (socketType == QBluetoothServiceInfo::RfcommProtocol) {
         rfcommChannel.reset([[ObjCRFCOMMChannel alloc] initWithDelegate:this]);
-        if (rfcommChannel)
+        if (rfcommChannel.data())
             status = [rfcommChannel connectAsyncToDevice:address withChannelID:port];
         else
             status = kIOReturnNoMemory;
     } else if (socketType == QBluetoothServiceInfo::L2capProtocol) {
         l2capChannel.reset([[ObjCL2CAPChannel alloc] initWithDelegate:this]);
-        if (l2capChannel)
+        if (l2capChannel.data())
             status = [l2capChannel connectAsyncToDevice:address withPSM:port];
         else
             status = kIOReturnNoMemory;
@@ -183,10 +183,10 @@ QString QBluetoothSocketPrivate::peerName() const
 
     NSString *nsName = nil;
     if (socketType == QBluetoothServiceInfo::RfcommProtocol) {
-        if (rfcommChannel)
+        if (rfcommChannel.data())
             nsName = [rfcommChannel peerName];
     } else if (socketType == QBluetoothServiceInfo::L2capProtocol) {
-        if (l2capChannel)
+        if (l2capChannel.data())
             nsName = [l2capChannel peerName];
     }
 
@@ -200,10 +200,10 @@ QBluetoothAddress QBluetoothSocketPrivate::peerAddress() const
 {
     BluetoothDeviceAddress addr = {};
     if (socketType == QBluetoothServiceInfo::RfcommProtocol) {
-        if (rfcommChannel)
+        if (rfcommChannel.data())
             addr = [rfcommChannel peerAddress];
     } else if (socketType == QBluetoothServiceInfo::L2capProtocol) {
-        if (l2capChannel)
+        if (l2capChannel.data())
             addr = [l2capChannel peerAddress];
     }
 
@@ -213,10 +213,10 @@ QBluetoothAddress QBluetoothSocketPrivate::peerAddress() const
 quint16 QBluetoothSocketPrivate::peerPort() const
 {
     if (socketType == QBluetoothServiceInfo::RfcommProtocol) {
-        if (rfcommChannel)
+        if (rfcommChannel.data())
             return [rfcommChannel getChannelID];
     } else if (socketType == QBluetoothServiceInfo::L2capProtocol) {
-        if (l2capChannel)
+        if (l2capChannel.data())
             return [l2capChannel getPSM];
     }
 
@@ -233,7 +233,7 @@ void QBluetoothSocketPrivate::_q_writeNotify()
     Q_ASSERT_X(socketType == QBluetoothServiceInfo::L2capProtocol
                || socketType == QBluetoothServiceInfo::RfcommProtocol,
                Q_FUNC_INFO, "invalid socket type");
-    Q_ASSERT_X(l2capChannel || rfcommChannel, Q_FUNC_INFO,
+    Q_ASSERT_X(l2capChannel.data() || rfcommChannel.data(), Q_FUNC_INFO,
                "invalid socket (no open channel)");
     Q_ASSERT_X(q_ptr, Q_FUNC_INFO, "invalid q_ptr (null)");
 
@@ -277,13 +277,13 @@ bool QBluetoothSocketPrivate::setChannel(IOBluetoothRFCOMMChannel *channel)
 
     openMode = QIODevice::ReadWrite;
     rfcommChannel.reset([[ObjCRFCOMMChannel alloc] initWithDelegate:this channel:channel]);
-    if (rfcommChannel) {// We do not handle errors, up to an external user.
+    if (rfcommChannel.data()) {// We do not handle errors, up to an external user.
         q_ptr->setOpenMode(QIODevice::ReadWrite);
         state = QBluetoothSocket::ConnectedState;
         socketType = QBluetoothServiceInfo::RfcommProtocol;
     }
 
-    return rfcommChannel;
+    return rfcommChannel.data();
 }
 
 bool QBluetoothSocketPrivate::setChannel(IOBluetoothL2CAPChannel *channel)
@@ -301,13 +301,13 @@ bool QBluetoothSocketPrivate::setChannel(IOBluetoothL2CAPChannel *channel)
 
     openMode = QIODevice::ReadWrite;
     l2capChannel.reset([[ObjCL2CAPChannel alloc] initWithDelegate:this channel:channel]);
-    if (l2capChannel) {// We do not handle errors, up to an external user.
+    if (l2capChannel.data()) {// We do not handle errors, up to an external user.
         q_ptr->setOpenMode(QIODevice::ReadWrite);
         state = QBluetoothSocket::ConnectedState;
         socketType = QBluetoothServiceInfo::L2capProtocol;
     }
 
-    return l2capChannel;
+    return l2capChannel.data();
 }
 
 
diff --git a/qtconnectivity/src/bluetooth/qbluetoothtransferreply_osx.mm b/qtconnectivity/src/bluetooth/qbluetoothtransferreply_osx.mm
index 65c8f82d..9cbc4e9d 100644
--- a/qtconnectivity/src/bluetooth/qbluetoothtransferreply_osx.mm
+++ b/qtconnectivity/src/bluetooth/qbluetoothtransferreply_osx.mm
@@ -136,13 +136,13 @@ QBluetoothTransferReplyOSXPrivate::~QBluetoothTransferReplyOSXPrivate()
     // The OBEX session will be closed then. If
     // somehow IOBluetooth/OBEX still has a reference to our
     // session, it will not call any of delegate's callbacks.
-    if (session)
+    if (session.data())
         [session closeSession];
 }
 
 bool QBluetoothTransferReplyOSXPrivate::isActive() const
 {
-    return agent || (session && [session hasActiveRequest]);
+    return agent || (session.data() && [session hasActiveRequest]);
 }
 
 bool QBluetoothTransferReplyOSXPrivate::startOPP(const QBluetoothAddress &device)
@@ -218,7 +218,7 @@ void QBluetoothTransferReplyOSXPrivate::sendConnect(const QBluetoothAddress &dev
 void QBluetoothTransferReplyOSXPrivate::sendPut()
 {
     Q_ASSERT_X(inputStream, Q_FUNC_INFO, "invalid input stream (null)");
-    Q_ASSERT_X(session, Q_FUNC_INFO, "invalid OBEX session (nil)");
+    Q_ASSERT_X(session.data(), Q_FUNC_INFO, "invalid OBEX session (nil)");
     Q_ASSERT_X([session isConnected], Q_FUNC_INFO, "not connected");
     Q_ASSERT_X(![session hasActiveRequest], Q_FUNC_INFO,
                "session already has an active request");
@@ -268,7 +268,7 @@ void QBluetoothTransferReplyOSXPrivate::OBEXConnectError(OBEXError errorCode, OB
     Q_UNUSED(errorCode)
     Q_UNUSED(response)
 
-    if (session) {
+    if (session.data()) {
         setReplyError(QBluetoothTransferReply::SessionError,
                       QCoreApplication::translate(TRANSFER_REPLY, TR_CONNECT_FAILED));
     } else {
diff --git a/qtconnectivity/src/bluetooth/qlowenergycontroller_osx.mm b/qtconnectivity/src/bluetooth/qlowenergycontroller_osx.mm
index 2958e6ed..6c71b093 100644
--- a/qtconnectivity/src/bluetooth/qlowenergycontroller_osx.mm
+++ b/qtconnectivity/src/bluetooth/qlowenergycontroller_osx.mm
@@ -202,7 +202,7 @@ bool QLowEnergyControllerPrivateOSX::isValid() const
 #ifdef Q_OS_TVOS
     return centralManager;
 #else
-    return centralManager || peripheralManager;
+    return centralManager.data() || peripheralManager.data();
 #endif
 }
 
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/deps/geojsonvt/6.3.0/include/mapbox/geojsonvt/types.hpp b/qtlocation/src/3rdparty/mapbox-gl-native/deps/geojsonvt/6.3.0/include/mapbox/geojsonvt/types.hpp
index b54357a7b..e5862cd7c 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/deps/geojsonvt/6.3.0/include/mapbox/geojsonvt/types.hpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/deps/geojsonvt/6.3.0/include/mapbox/geojsonvt/types.hpp
@@ -90,7 +90,7 @@ using property_map = mapbox::geometry::property_map;
 using identifier = mapbox::geometry::identifier;
 
 template <class T>
-using optional = std::experimental::optional<T>;
+using optional = std::optional<T>;
 
 template <class T>
 struct vt_geometry_type;
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/deps/geometry/0.9.2/include/mapbox/geometry/feature.hpp b/qtlocation/src/3rdparty/mapbox-gl-native/deps/geometry/0.9.2/include/mapbox/geometry/feature.hpp
index 20d2ddf6b..0c7d68839 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/deps/geometry/0.9.2/include/mapbox/geometry/feature.hpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/deps/geometry/0.9.2/include/mapbox/geometry/feature.hpp
@@ -8,7 +8,7 @@
 #include <string>
 #include <vector>
 #include <unordered_map>
-#include <experimental/optional>
+#include <optional>
 
 namespace mapbox {
 namespace geometry {
@@ -54,13 +54,13 @@ struct feature
 
     geometry_type geometry;
     property_map properties {};
-    std::experimental::optional<identifier> id {};
+    std::optional<identifier> id {};
 
     // GCC 4.9 does not support C++14 aggregates with non-static data member
     // initializers.
     feature(geometry_type geometry_,
             property_map properties_ = property_map {},
-            std::experimental::optional<identifier> id_ = std::experimental::optional<identifier> {})
+            std::optional<identifier> id_ = std::optional<identifier> {})
         : geometry(std::move(geometry_)),
           properties(std::move(properties_)),
           id(std::move(id_)) {}
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/deps/vector-tile/1.0.1/include/mapbox/vector_tile.hpp b/qtlocation/src/3rdparty/mapbox-gl-native/deps/vector-tile/1.0.1/include/mapbox/vector_tile.hpp
index 2308462c6..a3798db32 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/deps/vector-tile/1.0.1/include/mapbox/vector_tile.hpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/deps/vector-tile/1.0.1/include/mapbox/vector_tile.hpp
@@ -11,10 +11,10 @@
 #include <string>
 #include <stdexcept>
 
-#include <experimental/optional>
+#include <optional>
 
 template <typename T>
-using optional = std::experimental::optional<T>;
+using optional = std::optional<T>;
 
 namespace mapbox { namespace vector_tile {
 
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/include/mbgl/util/optional.hpp b/qtlocation/src/3rdparty/mapbox-gl-native/include/mbgl/util/optional.hpp
index abec02dca..f987b740e 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/include/mbgl/util/optional.hpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/include/mbgl/util/optional.hpp
@@ -1,13 +1,13 @@
 #pragma once
 
-#include <experimental/optional>
+#include <optional>
 
 namespace mbgl {
 
 template <typename T>
-using optional = std::experimental::optional<T>;
+using optional = std::optional<T>;
 
-using nullopt_t = std::experimental::nullopt_t;
-constexpr nullopt_t nullopt = std::experimental::nullopt;
+using nullopt_t = std::nullopt_t;
+constexpr nullopt_t nullopt = std::nullopt;
 
 } // namespace mbgl
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/mapbox-gl-native.pro b/qtlocation/src/3rdparty/mapbox-gl-native/mapbox-gl-native.pro
index 81260950c..64c8ba173 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/mapbox-gl-native.pro
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/mapbox-gl-native.pro
@@ -3,7 +3,7 @@ TARGET = qmapboxgl
 load(qt_helper_lib)
 
 CONFIG += qt c++14 exceptions warn_off staticlib object_parallel_to_source
-CONFIG -= c++1z
+CONFIG += c++1z
 
 QT += network-private \
       gui-private \
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/platform/qt/src/sqlite3.cpp b/qtlocation/src/3rdparty/mapbox-gl-native/platform/qt/src/sqlite3.cpp
index 4bcaea0e3..454bbe2c6 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/platform/qt/src/sqlite3.cpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/platform/qt/src/sqlite3.cpp
@@ -125,7 +125,7 @@ public:
 };
 
 template <typename T>
-using optional = std::experimental::optional<T>;
+using optional = std::optional<T>;
 
 
 Database::Database(const std::string& file, int flags)
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/src/csscolorparser/csscolorparser.hpp b/qtlocation/src/3rdparty/mapbox-gl-native/src/csscolorparser/csscolorparser.hpp
index 0e16ec499..14c25994e 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/src/csscolorparser/csscolorparser.hpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/src/csscolorparser/csscolorparser.hpp
@@ -27,12 +27,12 @@
 
 #include <string>
 #include <cmath>
-#include <experimental/optional>
+#include <optional>
 
 namespace CSSColorParser {
 
 template <class T>
-using optional = std::experimental::optional<T>;
+using optional = std::optional<T>;
 
 struct Color {
     inline Color() {
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/gl/attribute.hpp b/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/gl/attribute.hpp
index fa6c2ddea..56f717288 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/gl/attribute.hpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/gl/attribute.hpp
@@ -43,6 +43,11 @@ public:
         return std::tie(lhs.attributeType, lhs.attributeSize, lhs.attributeOffset, lhs.vertexBuffer, lhs.vertexSize, lhs.vertexOffset)
             == std::tie(rhs.attributeType, rhs.attributeSize, rhs.attributeOffset, rhs.vertexBuffer, rhs.vertexSize, rhs.vertexOffset);
     }
+
+    friend bool operator!=(const AttributeBinding& lhs,
+                           const AttributeBinding& rhs) {
+        return !(lhs == rhs);
+    }
 };
 
 using AttributeBindingArray = std::array<optional<AttributeBinding>, MAX_ATTRIBUTES>;
diff --git a/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/text/glyph_manager.cpp b/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/text/glyph_manager.cpp
index 313041890..e5fc3c93d 100644
--- a/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/text/glyph_manager.cpp
+++ b/qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/text/glyph_manager.cpp
@@ -137,7 +137,7 @@ void GlyphManager::notify(GlyphRequestor& requestor, const GlyphDependencies& gl
             if (it != entry.glyphs.end()) {
                 glyphs.emplace(*it);
             } else {
-                glyphs.emplace(glyphID, std::experimental::nullopt);
+                glyphs.emplace(glyphID, std::nullopt);
             }
         }
     }
diff --git a/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h b/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
index 69b61280c34..65fa36c4e0f 100644
--- a/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
+++ b/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
@@ -5,6 +5,7 @@
 #ifndef BASE_MAC_FOUNDATION_UTIL_H_
 #define BASE_MAC_FOUNDATION_UTIL_H_
 
+#include <AvailabilityMacros.h>
 #include <CoreFoundation/CoreFoundation.h>
 
 #include <string>
@@ -52,13 +53,12 @@ typedef CR_FORWARD_ENUM(unsigned int, NSSearchPathDirectory);
 typedef unsigned int NSSearchPathDomainMask;
 #endif
 
-typedef struct OpaqueSecTrustRef* SecACLRef;
-typedef struct OpaqueSecTrustedApplicationRef* SecTrustedApplicationRef;
 
-#if defined(OS_IOS)
+// The CSSM_DEPRECATED check is a workaround for a presumably wrong MacOSX SDK detection.
+// This macro was added to the Security.framework in the 10.15 SDK:
+// http://codeworkshop.net/objc-diff/sdkdiffs/macos/10.15/Security.html at SecBase.h
+#if defined(OS_IOS) || (defined(MAC_OS_X_VERSION_10_15) && defined(CSSM_DEPRECATED))
 typedef struct CF_BRIDGED_TYPE(id) __SecPolicy* SecPolicyRef;
-#else
-typedef struct OpaqueSecPolicyRef* SecPolicyRef;
 #endif
 
 namespace base {
diff --git a/qtwebengine/src/3rdparty/chromium/build/mac/find_sdk.py b/qtwebengine/src/3rdparty/chromium/build/mac/find_sdk.py
index 540a3202e43..0f39dff6bc1 100755
--- a/qtwebengine/src/3rdparty/chromium/build/mac/find_sdk.py
+++ b/qtwebengine/src/3rdparty/chromium/build/mac/find_sdk.py
@@ -28,7 +28,7 @@ class SdkError(Exception):
 
 def parse_version(version_str):
   """'10.6' => [10, 6]"""
-  return map(int, re.findall(r'(\d+)', version_str))
+  return list(map(int, re.findall(r'(\d+)', version_str)))[:2]
 
 
 def main():
diff --git a/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm b/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm
index 9af0cee9485..eced952ef41 100644
--- a/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm
+++ b/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm
@@ -51,7 +51,17 @@ namespace {
 const size_t kBacktraceDepth = 20;
 
 // The original implementation for |-[NSObject dealloc]|.
-IMP g_originalDeallocIMP = NULL;
+#if OBJC_OLD_DISPATCH_PROTOTYPES
+using RealIMP = IMP;
+#else
+// With !OBJC_OLD_DISPATCH_PROTOTYPES the runtime hasn't changed and IMP is
+// still what it always was, but the SDK is hiding the details now outside the
+// objc runtime. It is safe to define |RealIMP| to match the older definition of
+// |IMP|.
+using RealIMP = id (*)(id, SEL, ...);
+#endif
+
+RealIMP g_originalDeallocIMP = NULL;
 
 // Classes which freed objects become.  |g_fatZombieSize| is the
 // minimum object size which can be made into a fat zombie (which can
@@ -241,8 +251,8 @@ BOOL ZombieInit() {
     return YES;
 
   Class rootClass = [NSObject class];
-  g_originalDeallocIMP =
-      class_getMethodImplementation(rootClass, @selector(dealloc));
+  g_originalDeallocIMP = reinterpret_cast<RealIMP>(
+      class_getMethodImplementation(rootClass, @selector(dealloc)));
   // objc_getClass() so CrZombie doesn't need +class.
   g_zombieClass = objc_getClass("CrZombie");
   g_fatZombieClass = objc_getClass("CrFatZombie");
@@ -335,9 +345,10 @@ bool ZombieEnable(bool zombieAllObjects,
   if (!m)
     return false;
 
-  const IMP prevDeallocIMP = method_setImplementation(m, (IMP)ZombieDealloc);
+  const RealIMP prevDeallocIMP = reinterpret_cast<RealIMP>(
+      method_setImplementation(m, reinterpret_cast<IMP>(ZombieDealloc)));
   DCHECK(prevDeallocIMP == g_originalDeallocIMP ||
-         prevDeallocIMP == (IMP)ZombieDealloc);
+         prevDeallocIMP == reinterpret_cast<RealIMP>(ZombieDealloc));
 
   // Grab the current set of zombies.  This is thread-safe because
   // only the main thread can change these.
@@ -409,7 +420,7 @@ void ZombieDisable() {
   // Put back the original implementation of -[NSObject dealloc].
   Method m = class_getInstanceMethod([NSObject class], @selector(dealloc));
   DCHECK(m);
-  method_setImplementation(m, g_originalDeallocIMP);
+  method_setImplementation(m, reinterpret_cast<IMP>(g_originalDeallocIMP));
 
   // Can safely grab this because it only happens on the main thread.
   const size_t oldCount = g_zombieCount;
diff --git a/qtwebengine/src/3rdparty/chromium/device/geolocation/wifi_data_provider_mac.mm b/qtwebengine/src/3rdparty/chromium/device/geolocation/wifi_data_provider_mac.mm
index dd5492dd72f..8bc9901028b 100644
--- a/qtwebengine/src/3rdparty/chromium/device/geolocation/wifi_data_provider_mac.mm
+++ b/qtwebengine/src/3rdparty/chromium/device/geolocation/wifi_data_provider_mac.mm
@@ -16,10 +16,8 @@
 #include "device/geolocation/wifi_data_provider_common.h"
 #include "device/geolocation/wifi_data_provider_manager.h"
 
-extern "C" NSString* const kCWScanKeyMerge;
-
 @interface CWInterface (Private)
-- (NSArray*)scanForNetworksWithParameters:(NSDictionary*)params
+- (NSSet<CWNetwork *> *)scanForNetworksWithName:(NSString *)networkName
                                     error:(NSError**)error;
 @end
 
@@ -40,9 +38,6 @@ class CoreWlanApi : public WifiDataProviderCommon::WlanApiInterface {
 
 bool CoreWlanApi::GetAccessPointData(WifiData::AccessPointDataSet* data) {
   base::mac::ScopedNSAutoreleasePool auto_pool;
-  // Initialize the scan parameters with scan key merging disabled, so we get
-  // every AP listed in the scan without any SSID de-duping logic.
-  NSDictionary* params = @{ kCWScanKeyMerge : @NO };
 
   NSSet* supported_interfaces = [CWInterface interfaceNames];
   NSUInteger interface_error_count = 0;
@@ -58,8 +53,8 @@ bool CoreWlanApi::GetAccessPointData(WifiData::AccessPointDataSet* data) {
     const base::TimeTicks start_time = base::TimeTicks::Now();
 
     NSError* err = nil;
-    NSArray* scan =
-        [corewlan_interface scanForNetworksWithParameters:params error:&err];
+    NSSet<CWNetwork *>* scan =
+        [corewlan_interface scanForNetworksWithName:nil error:&err];
     const int error_code = [err code];
     const int count = [scan count];
     // We could get an error code but count != 0 if the scan was interrupted,
